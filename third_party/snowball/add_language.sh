#!/bin/bash
set -e

if [ $# -eq 0 ]; then
    echo "Usage: $0 <language1> [language2]..."
    exit 1
fi

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
TEMP_DIR=$(mktemp -d)

# Setup Snowball compiler
cd "$TEMP_DIR"
git clone --depth=1 https://github.com/snowballstem/snowball.git >/dev/null 2>&1
cd snowball
make snowball >/dev/null 2>&1

# Generate language files
for lang in "$@"; do
    if [ ! -f "algorithms/${lang}.sbl" ]; then
        echo "Error: Language '$lang' not found"
        continue
    fi
    
    ./snowball "algorithms/${lang}.sbl" -o "stem_UTF_8_${lang}" -eprefix "${lang}_UTF_8_" -r runtime -u
    cp "stem_UTF_8_${lang}.c" "$SCRIPT_DIR/src_c/"
    cp "stem_UTF_8_${lang}.h" "$SCRIPT_DIR/src_c/"
done

# Update modules.h based on existing language files
cd "$SCRIPT_DIR"

# Get sorted list of languages for header comment
LANGS=$(ls src_c/stem_UTF_8_*.h 2>/dev/null | sed 's/.*stem_UTF_8_\(.*\)\.h/\1/' | sort | tr '\n' ', ' | sed 's/, $//')

{
    echo "/* libstemmer/modules.h: List of stemming modules."
    echo " *"  
    echo " * This file is generated by mkmodules.pl from a list of module names."
    echo " * Do not edit manually."
    echo " *"
    echo " * Modules included by this file are: $LANGS"
    echo " */"
    echo
    
    # Include headers
    for f in src_c/stem_UTF_8_*.h; do
        lang=$(basename "$f" .h | sed 's/stem_UTF_8_//')
        echo "#include \"../src_c/stem_UTF_8_${lang}.h\""
    done
    
    echo
    echo "typedef enum {"
    echo "  ENC_UNKNOWN=0,"
    echo "  ENC_UTF_8"
    echo "} stemmer_encoding_t;"
    echo
    echo "struct stemmer_encoding {"
    echo "  const char * name;"
    echo "  stemmer_encoding_t enc;"
    echo "};"
    echo "static const struct stemmer_encoding encodings[] = {"
    echo "  {\"UTF_8\", ENC_UTF_8},"
    echo "  {0,ENC_UNKNOWN}"
    echo "};"
    echo
    echo "struct stemmer_modules {"
    echo "  const char * name;"
    echo "  stemmer_encoding_t enc;"
    echo "  struct SN_env * (*create)(void);"
    echo "  void (*close)(struct SN_env *);"
    echo "  int (*stem)(struct SN_env *);"
    echo "};"
    echo "static const struct stemmer_modules modules[] = {"
    
    # Generate entries based on modules.txt but only for languages we have
    while IFS= read -r line; do
        # Skip comments and empty lines
        [[ "$line" =~ ^[[:space:]]*# ]] && continue
        [[ "$line" =~ ^[[:space:]]*$ ]] && continue
        
        # Parse: algorithm UTF_8 aliases
        alg=$(echo "$line" | awk '{print $1}')
        aliases=$(echo "$line" | awk '{print $3}')
        
        # Check if we have this language file
        if [[ -f "src_c/stem_UTF_8_${alg}.h" ]]; then
            # Split aliases and create entries
            IFS=',' read -ra ALIAS_ARRAY <<< "$aliases"
            for alias in "${ALIAS_ARRAY[@]}"; do
                echo "  {\"${alias}\", ENC_UTF_8, ${alg}_UTF_8_create_env, ${alg}_UTF_8_close_env, ${alg}_UTF_8_stem},"
            done
        fi
    done < libstemmer/modules.txt
    
    echo "  {0,ENC_UNKNOWN,0,0,0}"
    echo "};"
    echo "static const char * algorithm_names[] = {"
    
    for f in src_c/stem_UTF_8_*.h; do
        lang=$(basename "$f" .h | sed 's/stem_UTF_8_//')
        echo "  \"${lang}\", "
    done
    
    echo "  0"
    echo "};"
    
} > libstemmer/modules.h

rm -rf "$TEMP_DIR"
echo "Added languages: $*"
